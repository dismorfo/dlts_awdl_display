<?php

/**
 * Implements hook_field_formatter_info().
 */
function dlts_awdl_display_field_formatter_info() {
  return array(
    'dlts_awdl_display_custom_link' => array(
      'label' => t('File link with label "Download PDF"'),
      'field types' => array('file'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function dlts_awdl_display_field_formatter_view($entity_type, $entity, $field, $instance, $lang_code, $items, $display) {

  $element = array();

  switch ($display['type']) {
    case 'dlts_awdl_display_custom_link':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#theme' => 'file_custom_link',
          '#file' => (object) $item,
        );
      }
      break;
  }

  return $element;
}

/**
 * Implements hook_theme().
 */
function dlts_awdl_display_theme() {
  return array(
    'file_custom_link' => array(
      'variables' => array('file' => NULL, 'icon_directory' => NULL),
    ),
  );
}


/**
 * Returns HTML for a link to a file.
 *
 * @param $variables
 *   An associative array containing:
 *   - file: A file object to which the link will be created.
 *   - icon_directory: (optional) A path to a directory of icons to be used for
 *     files. Defaults to the value of the "file_icon_directory" variable.
 *
 * @ingroup themeable
 */
function theme_file_custom_link($variables) {

  $file = $variables['file'];
  
  $icon_directory = $variables['icon_directory'];

  $url = file_create_url($file->uri);
  
  // Set options as per anchor format described at
  // http://microformats.org/wiki/file-format-examples
  $options = array(
    'attributes' => array(
      'type' => $file->filemime . '; length=' . $file->filesize,
    ),
  );
  
  $link_text = check_plain(t('Download PDF'));

  return '<span class="custom file">' . l($link_text, $url, $options) . '</span>';
  
}